version: 2.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:8u242-jdk
    steps:
      - checkout
      - run:
          name: Determine which directories have changed
          command: |
            git diff --no-commit-id --name-only -r `git log -n 2 --oneline --pretty=format:"%h" | tail -n1` | cut -d/ -f1 | sort -u >  projects
            printf "Modified directories:\n"
            cat projects
            while read project; do
              if grep -Fxq $project project-dirs; then
                printf "\nTriggerring build for project: "$project
                curl -s -u ${CIRCLE_TOKEN}: -d build_parameters[CIRCLE_JOB]=${project} https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
              fi
            done < projects
  cloud-gateway:
    docker:
      - image: circleci/openjdk:8u242-jdk
    working_directory: ~/spring-petclinic-msa/cloud-gateway
    steps:
      - build-service:
          service-name: "cloud-gateway"
  customers-service:
    docker:
      - image: circleci/openjdk:8u242-jdk
    working_directory: ~/spring-petclinic-msa/customers-service
    steps:
      - build-service:
          service-name: "customers-service"
  vets-service:
    docker:
      - image: circleci/openjdk:8u242-jdk
    working_directory: ~/spring-petclinic-msa/vets-service
    steps:
      - build-service:
          service-name: "vets-service"
  visits-service:
    docker:
      - image: circleci/openjdk:8u242-jdk
    working_directory: ~/spring-petclinic-msa/visits-service
    steps:
      - build-service:
          service-name: "visits-service"
  web-app:
    docker:
      - image: circleci/openjdk:8u242-jdk
    working_directory: ~/spring-petclinic-msa/web-app
    steps:
      - build-service:
          service-name: "web-app"

commands:
  build-service:
    description: "Build a service and push image to dockerhub"
    parameters:
      service-name:
        type: string
    steps:
      # git pull
      - checkout:
          path: ~/spring-petclinic-msa

      - setup_remote_docker

      - run:
          name: Login to Dockerhub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS

      # Download and cache dependencies
      - restore_cache:
          keys:
            - << parameters.service-name >>-{{ checksum "pom.xml"}}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: << parameters.service-name >>-{{ checksum "pom.xml"}}

      # package into a jar and build image
      - run: mvn clean package -Ddocker.image.tag=Build-${CIRCLE_BUILD_NUM}-CI -Ddockerfile.maven.settings.auth=false

      # push docker image to docker hub
      - run: mvn dockerfile:push -Ddocker.image.tag=Build-${CIRCLE_BUILD_NUM}-CI

      # store raw content of src code
      - store_artifacts:
          path: target/classes
          destination: spring-petclinic-<< parameters.service-name >>
